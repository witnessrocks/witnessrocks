---
import { Schema } from "astro-seo-schema";
import GlobalSchema from "@seo/GlobalSchema.astro";
import { getConstants } from "@consts";
import type { SupportedLocale } from "@consts";
import { getTranslationByLanguage } from "@utils/translationMapping";

interface Props {
  tags: string[];
  tagCounts: { [key: string]: number };
  locale: SupportedLocale;
}

const { tags, tagCounts, locale } = Astro.props as Props;

const constants = getConstants(locale);

const siteUrl = Astro.site
  ? `${Astro.site.toString().replace(/\/?$/, "/")}`
  : "https://witness.rocks/";

const homepageTranslation = getTranslationByLanguage("homepage", locale);
const blogTranslation = getTranslationByLanguage("blog", locale);
const tagsTitle = constants.TAGS_TITLE;
const tagsDescription = constants.TAGS_DESCRIPTION;

const tagsUrl = `${siteUrl}${locale}/tags/`;
---

<GlobalSchema />

<Schema
  item={{
    "@context": "https://schema.org",
    "@type": "CollectionPage",
    name: `${tagsTitle} - ${locale.toUpperCase()}`,
    description: tagsDescription,
    url: tagsUrl,
    mainEntity: {
      "@type": "ItemList",
      name: tagsTitle,
      itemListElement: tags.map((tag, index) => ({
        "@type": "ListItem",
        position: index + 1,
        url: `${siteUrl}${locale}/tags/${tag}/1/`,
        name: tag,
        description: `This tag has ${tagCounts[tag]} posts.`,
      })),
    },
  }}
/>

<Schema
  item={{
    "@context": "https://schema.org",
    "@type": "BreadcrumbList",
    itemListElement: [
      {
        "@type": "ListItem",
        position: 1,
        name: homepageTranslation,
        item: siteUrl,
      },
      {
        "@type": "ListItem",
        position: 2,
        name: blogTranslation,
        item: `${siteUrl}${locale}/`,
      },
      {
        "@type": "ListItem",
        position: 3,
        name: tagsTitle,
        item: tagsUrl,
      },
    ],
  }}
/>
