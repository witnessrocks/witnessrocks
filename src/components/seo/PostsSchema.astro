---
import { Schema } from "astro-seo-schema";
import { getConstants } from "@consts";
import type { SupportedLocale } from "@consts";
import GlobalSchema from "@seo/GlobalSchema.astro";
import type { CollectionEntry } from "astro:content";
import { getCategoryByLanguage } from "@utils/categoryMapping";
import { getTranslationByLanguage } from "@utils/translationMapping";

interface Props {
  post: CollectionEntry<"posts">;
  locale: SupportedLocale;
}

const { post, locale } = Astro.props as Props;

const constants = getConstants(locale);

const siteUrl = Astro.site
  ? `${Astro.site.toString().replace(/\/?$/, "/")}`
  : "https://witness.rocks/";

const pathParts = post.slug.split("/").filter(Boolean);
const slug = pathParts[pathParts.length - 1];

const category = post.data.category[0];
const translatedCategory = getCategoryByLanguage(category, "en", locale);

const postUrl = `${siteUrl}${locale}/posts/${slug}/`;

const logoPath = import.meta.env.LOGO_PATH || "/logo.ico";
const logoUrl = new URL(logoPath, siteUrl).toString();

const authorName = post.data.author || "Witness.Rocks Author";

const imageUrl = post.data.cover
  ? new URL(post.data.cover, siteUrl).toString()
  : logoUrl;

const datePublished = new Date(post.data.pubDate).toISOString();
const dateModified = new Date().toISOString();

const imageWidth = 1960;
const imageHeight = 1102;

const categoryUrl = `${siteUrl}${locale}/category/${translatedCategory}/1/`;

const homepageTranslation = getTranslationByLanguage("homepage", locale);
const blogTranslation = getTranslationByLanguage("blog", locale);

const breadcrumbs: Array<{
  "@type": "ListItem";
  position: number;
  name: string;
  item: string;
}> = [
  {
    "@type": "ListItem",
    position: 1,
    name: homepageTranslation,
    item: siteUrl,
  },
  {
    "@type": "ListItem",
    position: 2,
    name: blogTranslation,
    item: `${siteUrl}${locale}/`,
  },
  {
    "@type": "ListItem",
    position: 3,
    name: translatedCategory,
    item: categoryUrl,
  },
  {
    "@type": "ListItem",
    position: 4,
    name: post.data.title,
    item: postUrl,
  },
];
---

<GlobalSchema />

<Schema
  item={{
    "@context": "https://schema.org",
    "@type": "BlogPosting",
    mainEntityOfPage: {
      "@type": "WebPage",
      "@id": postUrl,
    },
    headline: post.data.title,
    description: post.data.description,
    image: {
      "@type": "ImageObject",
      url: imageUrl,
      caption: post.data.coverAlt,
      width: {
        "@type": "QuantitativeValue",
        value: imageWidth,
        unitCode: "C62",
      },
      height: {
        "@type": "QuantitativeValue",
        value: imageHeight,
        unitCode: "C62",
      },
    },
    author: {
      "@type": "Person",
      name: authorName,
      image: {
        "@type": "ImageObject",
        url: `${siteUrl}Witness.Rocks.webp`,
        width: {
          "@type": "QuantitativeValue",
          value: 400,
          unitCode: "C62",
        },
        height: {
          "@type": "QuantitativeValue",
          value: 400,
          unitCode: "C62",
        },
      },
    },
    publisher: {
      "@type": "Organization",
      name: constants.SITE_TITLE,
      logo: {
        "@type": "ImageObject",
        url: logoUrl,
      },
    },
    datePublished: datePublished,
    dateModified: dateModified,
    inLanguage: locale,
    keywords: post.data.tags.join(", "),
    url: postUrl,
  }}
/>

<Schema
  item={{
    "@context": "https://schema.org",
    "@type": "BreadcrumbList",
    itemListElement: breadcrumbs,
  }}
/>
